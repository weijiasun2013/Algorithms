
'''
rotate a linked list with k (count clock wise)
if linked list is 10 -> 20 -> 30 -> 40 -> 50 -> 60 -> null, and k = 4
then output is: 50 -> 60 -> 10 -> 20 -> 30 -> 40 -> null
'''

class Node(object):
    def __init__(self,value):
        self.val = value
        self.next = None

def show(head):
    h = head
    rslt = ''
    while h:
        rslt += str(h.val) + ' -> '
        h = h.next
    rslt += 'null'
    print(rslt)

def rotate_linked_list(head,k):
    if head is None:
        return head

    _len = 0
    p1,prev = head, None
    while p1:
        _len += 1
        p1 = p1.next
        if prev is None:
            prev = head
        else:
            prev = prev.next
    prev.next = head
    _len = k%_len
    p1 = head
    while _len > 0:
        _len -= 1
        p1 = p1.next
        prev = prev.next
    prev.next = None
    return p1

def test1():
    print('test1------------------')
    n1 = None
    show(n1)
    r = rotate_linked_list(n1,1)
    show(r)

def test2():
    print('test2------------------')
    n1 = Node(1)
    show(n1)
    r = rotate_linked_list(n1,10)
    show(r)

def test3():
    print('test3------------------')
    n1 = Node(1)
    n2 = Node(2)
    n3 = Node(3)
    n4 = Node(4)
    n5 = Node(5)

    n1.next = n2
    n2.next = n3
    n3.next = n4
    n4.next = n5

    show(n1)
    r = rotate_linked_list(n1,4)
    show(r)

def test4():
    print('test4------------------')
    n1 = Node(1)
    n2 = Node(2)
    n3 = Node(3)
    n4 = Node(4)
    n5 = Node(5)
    n6 = Node(6)

    n1.next = n2
    n2.next = n3
    n3.next = n4
    n4.next = n5
    n5.next = n6

    show(n1)
    r = rotate_linked_list(n1,6)
    show(r)

def test5():
    print('test5------------------')
    n1 = Node(1)
    n2 = Node(2)

    n1.next = n2
    show(n1)
    r = rotate_linked_list(n1,5)
    show(r)

def main():#
    test1()
    test2()
    test3()
    test4()
    test5()

if __name__ == '__main__':
    main()